From 61c04273c228fff6c6844b5a66cbfab0329d95f8 Mon Sep 17 00:00:00 2001
From: Thomas Guillem <thomas@gllm.fr>
Date: Thu, 22 Aug 2019 13:59:07 +0200
Subject: [PATCH 4/5] preparser: change options handling

Reminder of the current behavior: the meta fetcher is either always triggered
after the preparser is finished or manually.

This commit aims to give more controls so that the meta fetcher is not
necessarily triggered after a preparsng.

The current behavior of macOS/playlist/mediatree is unchanged (the components
touching the preparser).

Here are the API changes for

libvlc_MetadataRequest():

 - Can't be called without a valid META_REQUEST_OPTION_SCOPE_* flag

 - The flag META_REQUEST_OPTION_SCOPE_* is not fetching meta anymore. Use
   (META_REQUEST_OPTION_SCOPE_*|META_REQUEST_OPTION_FETCH_*) to fetch meta when
   the preparsing ends.

libvlc_ArtRequest():

 - Can't be called without a valid META_REQUEST_OPTION_FETCH_* flag.

 - The META_REQUEST_OPTION_FETCH_NETWORK flag will now only fetch meta via
   network.

libvlc_media_parse_with_options():

 - The flag libvlc_media_parse_* is not fetching meta anymore. Use
   libvlc_media_fetch_* to fetch meta when the preparsing ends.
 - The libvlc_media_fetch_network flag will now only fetch meta via network.

(cherry picked from commit b063dca4d20a2cb1fc9549211f9c322885786293)
---
 include/vlc_input_item.h         |  5 ++++-
 lib/media.c                      |  2 ++
 modules/gui/qt/input_manager.cpp |  4 ++--
 src/libvlc.c                     |  2 ++
 src/playlist/fetcher.c           |  8 ++++++--
 src/playlist/preparser.c         | 14 ++++++++++----
 test/libvlc/media.c              |  4 +++-
 7 files changed, 29 insertions(+), 10 deletions(-)

diff --git a/include/vlc_input_item.h b/include/vlc_input_item.h
index f22c3d9330..90957e0c85 100644
--- a/include/vlc_input_item.h
+++ b/include/vlc_input_item.h
@@ -365,7 +365,10 @@ typedef enum input_item_meta_request_option_t
     META_REQUEST_OPTION_SCOPE_LOCAL   = 0x01,
     META_REQUEST_OPTION_SCOPE_NETWORK = 0x02,
     META_REQUEST_OPTION_SCOPE_ANY     = 0x03,
-    META_REQUEST_OPTION_DO_INTERACT   = 0x04
+    META_REQUEST_OPTION_FETCH_LOCAL   = 0x04,
+    META_REQUEST_OPTION_FETCH_NETWORK = 0x08,
+    META_REQUEST_OPTION_FETCH_ANY     = 0x0C,
+    META_REQUEST_OPTION_DO_INTERACT   = 0x10,
 } input_item_meta_request_option_t;
 
 /* status of the vlc_InputItemPreparseEnded event */
diff --git a/lib/media.c b/lib/media.c
index 54875d6a0e..7c839a5fe0 100644
--- a/lib/media.c
+++ b/lib/media.c
@@ -800,6 +800,8 @@ static int media_parse(libvlc_media_t *media, bool b_async,
 
         if (parse_flag & libvlc_media_parse_network)
             parse_scope |= META_REQUEST_OPTION_SCOPE_NETWORK;
+        if (parse_flag & libvlc_media_fetch_local)
+            parse_scope |= META_REQUEST_OPTION_FETCH_LOCAL;
         if (parse_flag & libvlc_media_do_interact)
             parse_scope |= META_REQUEST_OPTION_DO_INTERACT;
         ret = libvlc_MetadataRequest(libvlc, item, parse_scope, timeout, media);
diff --git a/modules/gui/qt/input_manager.cpp b/modules/gui/qt/input_manager.cpp
index ede449141f..20c1e77cc2 100644
--- a/modules/gui/qt/input_manager.cpp
+++ b/modules/gui/qt/input_manager.cpp
@@ -688,8 +688,8 @@ void InputManager::requestArtUpdate( input_item_t *p_item, bool b_forced )
                 return;
         }
         libvlc_ArtRequest( p_intf->obj.libvlc, p_item,
-                           (b_forced) ? META_REQUEST_OPTION_SCOPE_ANY
-                                      : META_REQUEST_OPTION_NONE );
+                           (b_forced) ? META_REQUEST_OPTION_FETCH_ANY
+                                      : META_REQUEST_OPTION_FETCH_LOCAL );
         /* No input will signal the cover art to update,
              * let's do it ourself */
         if ( b_current_item )
diff --git a/src/libvlc.c b/src/libvlc.c
index 25f7c7d6d2..eda0ceaaf4 100644
--- a/src/libvlc.c
+++ b/src/libvlc.c
@@ -516,6 +516,7 @@ int libvlc_MetadataRequest(libvlc_int_t *libvlc, input_item_t *item,
                            int timeout, void *id)
 {
     libvlc_priv_t *priv = libvlc_priv(libvlc);
+    assert(i_options & META_REQUEST_OPTION_SCOPE_ANY);
 
     if (unlikely(priv->parser == NULL))
         return VLC_ENOMEM;
@@ -538,6 +539,7 @@ int libvlc_ArtRequest(libvlc_int_t *libvlc, input_item_t *item,
                       input_item_meta_request_option_t i_options)
 {
     libvlc_priv_t *priv = libvlc_priv(libvlc);
+    assert(i_options & META_REQUEST_OPTION_FETCH_ANY);
 
     if (unlikely(priv->parser == NULL))
         return VLC_ENOMEM;
diff --git a/src/playlist/fetcher.c b/src/playlist/fetcher.c
index 5a55d02494..8d289e52bb 100644
--- a/src/playlist/fetcher.c
+++ b/src/playlist/fetcher.c
@@ -23,6 +23,7 @@
 # include "config.h"
 #endif
 
+#include <assert.h>
 #include <vlc_common.h>
 #include <vlc_stream.h>
 #include <vlc_modules.h>
@@ -297,7 +298,7 @@ static void SearchLocal( playlist_fetcher_t* fetcher, struct fetcher_request* re
         return; /* done */
 
     if( var_InheritBool( fetcher->owner, "metadata-network-access" ) ||
-        req->options & META_REQUEST_OPTION_SCOPE_NETWORK )
+        req->options & META_REQUEST_OPTION_FETCH_NETWORK )
     {
         if( background_worker_Push( fetcher->network, req, NULL, 0 ) )
             SetPreparsed( req );
@@ -452,6 +453,7 @@ playlist_fetcher_t* playlist_fetcher_New( vlc_object_t* owner )
 int playlist_fetcher_Push( playlist_fetcher_t* fetcher, input_item_t* item,
     input_item_meta_request_option_t options, int preparse_status )
 {
+    assert(options & META_REQUEST_OPTION_FETCH_ANY);
     struct fetcher_request* req = malloc( sizeof *req );
 
     if( unlikely( !req ) )
@@ -464,7 +466,9 @@ int playlist_fetcher_Push( playlist_fetcher_t* fetcher, input_item_t* item,
     atomic_init( &req->refs, 1 );
     input_item_Hold( item );
 
-    if( background_worker_Push( fetcher->local, req, NULL, 0 ) )
+    struct background_worker* worker =
+        options & META_REQUEST_OPTION_FETCH_LOCAL ? fetcher->local : fetcher->network;
+    if( background_worker_Push( worker, req, NULL, 0 ) )
         SetPreparsed( req );
 
     RequestRelease( req );
diff --git a/src/playlist/preparser.c b/src/playlist/preparser.c
index cf67aca237..da2c99ccad 100644
--- a/src/playlist/preparser.c
+++ b/src/playlist/preparser.c
@@ -42,6 +42,7 @@ struct playlist_preparser_t
 struct input_preparser_req
 {
     input_item_t *item;
+    input_item_meta_request_option_t options;
     atomic_uint rc;
 };
 
@@ -52,13 +53,15 @@ struct input_preparser_task
 };
 
 static struct input_preparser_req *
-input_preparser_req_new(input_item_t *item)
+input_preparser_req_new(input_item_t *item,
+                        input_item_meta_request_option_t options)
 {
     struct input_preparser_req *req = malloc(sizeof(*req));
     if (!req)
         return NULL;
 
     req->item = input_item_Hold(item);
+    req->options = options;
     atomic_init(&req->rc, 1);
     return req;
 }
@@ -135,6 +138,7 @@ static int PreparserProbeInput( void* preparser_, void* task_ )
 static void PreparserCloseInput( void* preparser_, void* task_ )
 {
     struct input_preparser_task *task = task_;
+    struct input_preparser_req *req = task->req;
     playlist_preparser_t* preparser = preparser_;
     input_thread_t* input = task->input;
     input_item_t* item = input_priv(input)->p_item;
@@ -159,9 +163,11 @@ static void PreparserCloseInput( void* preparser_, void* task_ )
 
     free(task);
 
-    if( preparser->fetcher )
+    int fetch_options = req->options & META_REQUEST_OPTION_FETCH_ANY;
+    if( preparser->fetcher && fetch_options )
     {
-        if( !playlist_fetcher_Push( preparser->fetcher, item, 0, status ) )
+        if( !playlist_fetcher_Push( preparser->fetcher, item, fetch_options,
+                                    status ) )
             return;
     }
 
@@ -229,7 +235,7 @@ void playlist_preparser_Push( playlist_preparser_t *preparser,
             return;
     }
 
-    struct input_preparser_req *req = input_preparser_req_new(item);
+    struct input_preparser_req *req = input_preparser_req_new(item, i_options);
     if (!req)
     {
         input_item_SignalPreparseEnded( item, ITEM_PREPARSE_FAILED );
diff --git a/test/libvlc/media.c b/test/libvlc/media.c
index eef9ece051..0099e57b4d 100644
--- a/test/libvlc/media.c
+++ b/test/libvlc/media.c
@@ -158,7 +158,9 @@ static void test_input_metadata_timeout(libvlc_instance_t *vlc, int timeout,
                              input_item_preparse_timeout, &sem);
     assert(i_ret == 0);
     i_ret = libvlc_MetadataRequest(vlc->p_libvlc_int, p_item,
-                                   META_REQUEST_OPTION_SCOPE_LOCAL, timeout, vlc);
+                                   META_REQUEST_OPTION_SCOPE_LOCAL |
+                                   META_REQUEST_OPTION_FETCH_LOCAL,
+                                   timeout, vlc);
     assert(i_ret == 0);
 
     if (wait_and_cancel > 0)
-- 
2.20.1

